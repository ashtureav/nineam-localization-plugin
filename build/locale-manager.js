/*
LocaleManager Plugin 0.1.0

Copyright (c) 2013 [ninth avenue media, LLC] (mailto: paul.smith.iv@ninthavenuemedia.com)
Open source under the [MIT License](http://en.wikipedia.org/wiki/MIT_License).
*/
Ext.define("nineam.localization.model.LocaleModel-Touch",{extend:"Ext.data.Model",config:{fields:[{name:"id",type:"string"},{name:"label",type:"string"},{name:"url",type:"string"},{name:"propertiesClass",type:"string"}]}});Ext.define("nineam.localization.model.LocaleModel-ExtJS",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"label",type:"string"},{name:"url",type:"string"},{name:"frameworkUrl",type:"string"},{name:"propertiesClass",type:"object"}]});Ext.define("nineam.localization.model.LocaleModel",{extend:Ext.getVersion("extjs")?"nineam.localization.model.LocaleModel-ExtJS":"nineam.localization.model.LocaleModel-Touch"});Ext.define("nineam.localization.model.ClientModel-Touch",{extend:"Ext.data.Model",config:{fields:[{name:"client",type:"object"},{name:"method",type:"string"},{name:"key",type:"string"}]}});Ext.define("nineam.localization.model.ClientModel-ExtJS",{extend:"Ext.data.Model",fields:[{name:"client",type:"object"},{name:"method",type:"string"},{name:"key",type:"string"}]});Ext.define("nineam.localization.model.ClientModel",{extend:Ext.getVersion("extjs")?"nineam.localization.model.ClientModel-ExtJS":"nineam.localization.model.ClientModel-Touch"});Ext.define("nineam.localization.store.LocalesStore-Touch",{extend:"Ext.data.Store",requires:["nineam.localization.model.LocaleModel"],config:{storeId:"localesStore",model:"nineam.localization.model.LocaleModel",proxy:{type:"memory",reader:{type:"json",root:""}}}});Ext.define("nineam.localization.store.LocalesStore-ExtJS",{extend:"Ext.data.Store",requires:["nineam.localization.model.LocaleModel"],storeId:"localesStore",model:"nineam.localization.model.LocaleModel",proxy:{type:"memory",reader:{type:"json",root:""}}});Ext.define("nineam.localization.util.Persistence-ExtJS",{extend:"nineam.localization.util.AbstractPersistence",requires:["Ext.util.Cookies"],LOCALE_COOKIE_ID:"nineam.localization.util.Persistence-ExtJS.LOCALE_COOKIE_ID",getLocale:function(){var a=Ext.util.Cookies.get(this.LOCALE_COOKIE_ID);Ext.log({level:"log"},"DEBUG: LocaleManager - Getting persisted locale id: "+a);return a},setLocale:function(a){Ext.log({level:"log"},"DEBUG: LocaleManager - Persisting locale id: "+a);Ext.util.Cookies.set(this.LOCALE_COOKIE_ID,a,new Date(new Date().getTime()+(1000*60*60*24*365)))}});Ext.define("nineam.localization.util.Persistence",{extend:Ext.getVersion("extjs")?"nineam.localization.util.Persistence-ExtJS":"nineam.localization.util.Persistence-Touch",singleton:true});Ext.define("nineam.localization.store.LocalesStore",{extend:Ext.getVersion("extjs")?"nineam.localization.store.LocalesStore-ExtJS":"nineam.localization.store.LocalesStore-Touch"});Ext.define("nineam.localization.event.LocaleEvent",{statics:{INITIALIZED:"nineam.localization.event.LocaleEvent.INITIALIZED",LOCALES_CHANGED:"nineam.localization.event.LocaleEvent.LOCALES_CHANGED",LOCALE_CHANGED:"nineam.localization.event.LocaleEvent.LOCALE_CHANGED"}});Ext.define("nineam.localization.delegate.LocaleDelegate",{requires:["Ext.Ajax"],success:{},failure:{},scope:"",constructor:function(c,a,b){this.callParent(arguments);this.success=c;this.failure=a;this.scope=b},loadPropertiesFile:function(a){if(!this.success||!this.scope){return}Ext.Ajax.request({url:a,success:this.ajaxSuccess,failure:this.ajaxFailure,scope:this})},ajaxSuccess:function(a){this.success.call(this.scope,a.responseText)},ajaxFailure:function(){}});Ext.define("nineam.localization.LocaleManager",{singleton:true,requires:["nineam.localization.event.LocaleEvent","nineam.localization.delegate.LocaleDelegate","nineam.localization.util.Persistence"],mixins:{observable:"Ext.util.Observable"},initialized:false,clients:[],locales:null,getLocales:function(){return this.locales},setLocales:function(a){this.locales=a;this.fireEvent(nineam.localization.event.LocaleEvent.LOCALES_CHANGED,{})},locale:null,getLocale:function(){return this.locale},setLocale:function(a){this.locale=a;this.loadPropertiesFile()},properties:null,getProperty:function(key){return eval("this.properties."+key)},getPersistedLocale:function(){var a=nineam.localization.util.Persistence.getLocale();return this.locales.find("id",a)?a:this.locales.getAt(0).get("id")},constructor:function(a){if(typeof(Ext.log)!="function"){Ext.log=function(b,c){console.log(c)}}Ext.log({level:"log"},"DEBUG: Constructing LocaleManager");this.callParent(arguments);this.mixins.observable.constructor.call(this,a)},loadPropertiesFile:function(){var c=this.locales.findRecord("id",this.locale);var b=new nineam.localization.delegate.LocaleDelegate(this.loadPropertiesFileResultHandler,this.loadPropertiesFileFaultHandler,this);var a=c.get("url");Ext.log({level:"log"},"DEBUG: LocaleManager - Loading properties file: "+a);b.loadPropertiesFile(a)},loadPropertiesFileResultHandler:function(a){Ext.log({level:"log"},"DEBUG: LocaleManager - Properties file loaded: "+this.locales.findRecord("id",this.locale).get("url"));var c=document.getElementsByTagName("head")[0];var b=document.createElement("script");b.type="text/javascript";b.innerHTML=a;c.appendChild(b);var d=this;setTimeout(function(){var e=d.locales.findRecord("id",d.locale);d.properties=Ext.create(e.get("propertiesClass"));d.updateClients();nineam.localization.util.Persistence.setLocale(d.locale);d.fireEvent(nineam.localization.event.LocaleEvent.LOCALE_CHANGED,{});if(!d.initialized){Ext.log({level:"log"},"DEBUG: LocaleManager - Locale Manager Initialized");d.initialized=true;d.fireEvent(nineam.localization.event.LocaleEvent.INITIALIZED,{})}},100)},loadPropertiesFileFaultHandler:function(){Ext.log({level:"error"},"ERROR: LocaleManager - Failure loading properties file")},updateClients:function(){Ext.log({level:"log"},"DEBUG: LocaleManager - Updating Clients");var a=this.clients.length-1;for(var b=a;b>-1;b--){this.updateClient(this.clients[b])}},updateClient:function(clientModel){var client=clientModel.get("client");var method=clientModel.get("method");var key=clientModel.get("key");try{var prop;if(key){var global=this.getProperty(key);prop=global?global:eval("client."+key)}else{prop=this.properties}client[method].call(client,prop)}catch(e){Ext.log({level:"error"},"ERROR: LocaleManager - Error updating client [client: "+client.getId()+", method: "+method+", key: "+key+"] - error: "+e)}},registerClient:function(a){Ext.log({level:"log"},"DEBUG: LocaleManager - Registering client component [client: "+a.get("client").getId()+", method: "+a.get("method")+", key: "+a.get("key")+"]");this.clients.push(a);if(this.properties){this.updateClient(a)}}});Ext.define("nineam.localization.LocalePlugin",{extend:Ext.getVersion("extjs")?"Ext.AbstractPlugin":"Ext.Component",alias:"plugin.localization",requires:["nineam.localization.LocaleManager","nineam.localization.model.ClientModel"],config:{method:"",key:""},init:function(b){var a=Ext.create("nineam.localization.model.ClientModel",{client:b,method:this.getMethod(),key:this.getKey()});nineam.localization.LocaleManager.registerClient(a)}});