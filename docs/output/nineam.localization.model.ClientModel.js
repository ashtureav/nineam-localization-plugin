Ext.data.JsonP.nineam_localization_model_ClientModel({"tagname":"class","files":[{"filename":"ClientModel.js","href":"ClientModel.html#nineam-localization-model-ClientModel"}],"aliases":{},"alternateClassNames":[],"members":[{"name":"modelConfig","tagname":"property","owner":"nineam.localization.model.ClientModel","id":"property-modelConfig","meta":{"private":true}}],"extends":"Ext.data.Model","name":"nineam.localization.model.ClientModel","mixins":[],"requires":[],"uses":[],"code_type":"ext_define","id":"class-nineam.localization.model.ClientModel","short_doc":"Model object representing the component/method to call on locale\nchange as well as the key to use to obtain the value...","component":false,"superclasses":["Ext.data.Model"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.data.Model<div class='subclass '><strong>nineam.localization.model.ClientModel</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ClientModel.html#nineam-localization-model-ClientModel' target='_blank'>ClientModel.js</a></div></pre><div class='doc-contents'><p>Model object representing the component/method to call on locale\nchange as well as the key to use to obtain the value to pass to said method.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-modelConfig' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='nineam.localization.model.ClientModel'>nineam.localization.model.ClientModel</span><br/><a href='source/ClientModel.html#nineam-localization-model-ClientModel-property-modelConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/nineam.localization.model.ClientModel-property-modelConfig' class='name expandable'>modelConfig</a><span> : Array</span><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Model configuration object for managing differences between ExtJS and ST2. ...</div><div class='long'><p>Model configuration object for managing differences between ExtJS and ST2.</p>\n\n<p>This object is handled by the modelConfig preprocessor.</p>\n<p>Defaults to: <code>[{name: 'client', type: 'object'}, {name: 'method', type: 'string'}, {name: 'key', type: 'string'}]</code></p></div></div></div></div></div></div></div>","meta":{}});